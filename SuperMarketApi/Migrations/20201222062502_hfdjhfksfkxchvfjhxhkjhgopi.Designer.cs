// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMarketApi.Models;

namespace SuperMarketApi.Migrations
{
    [DbContext(typeof(POSDbContext))]
    [Migration("20201222062502_hfdjhfksfkxchvfjhxhkjhgopi")]
    partial class hfdjhfksfkxchvfjhxhkjhgopi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperMarketApi.Models.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Email");

                    b.Property<string>("FCM_Token");

                    b.Property<bool>("IsConfirmed");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SatPass");

                    b.Property<string>("SatUname");

                    b.Property<string>("UPAPIKey");

                    b.Property<string>("UPUsername");

                    b.Property<string>("bizid");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SuperMarketApi.Models.AdditionalCharges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChargeType");

                    b.Property<double>("ChargeValue");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("TaxGroupId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TaxGroupId");

                    b.ToTable("AdditionalCharges");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Addon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddonGroupId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("AddonGroupId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("Addons");
                });

            modelBuilder.Entity("SuperMarketApi.Models.AddonGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("AddonGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Barcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Barcodes");
                });

            modelBuilder.Entity("SuperMarketApi.Models.BarcodeVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BarcodeId");

                    b.Property<int>("VariantId");

                    b.HasKey("Id");

                    b.HasIndex("BarcodeId");

                    b.HasIndex("VariantId");

                    b.ToTable("BarcodeVariants");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int?>("FreeQtyPercentage");

                    b.Property<bool>("IsSynced");

                    b.Property<bool>("IsUPCategory");

                    b.Property<int?>("MinimumQty");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("ParentCategoryId");

                    b.Property<int?>("SortOrder");

                    b.Property<bool>("isactive");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryAddon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddonGroupId");

                    b.Property<int>("AddonId");

                    b.Property<int>("CategoryId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Price");

                    b.Property<double?>("TakeawayPrice");

                    b.HasKey("Id");

                    b.HasIndex("AddonGroupId");

                    b.HasIndex("AddonId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CategoryAddons");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OptionGroupId");

                    b.Property<int>("OptionId");

                    b.Property<double>("Price");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<double?>("UPPrice");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OptionGroupId");

                    b.HasIndex("OptionId");

                    b.ToTable("CategoryOptions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryOptionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OptionGroupId");

                    b.Property<double>("Price");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<double?>("UPPrice");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OptionGroupId");

                    b.ToTable("CategoryOptionGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Price");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<int>("VariantGroupId");

                    b.Property<int>("VariantId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VariantGroupId");

                    b.HasIndex("VariantId");

                    b.ToTable("CategoryVariants");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryVariantGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("VariantGroupId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("VariantGroupId");

                    b.ToTable("CategoryVariantGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Cndition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("JoinOperatorId");

                    b.Property<int>("OperatorId");

                    b.Property<int>("ParentCnditionId");

                    b.Property<int>("ValueId");

                    b.Property<int>("VariableTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("JoinOperatorId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("ParentCnditionId");

                    b.HasIndex("VariableTypeId");

                    b.ToTable("Cnditions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.Property<string>("PostalCode");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<DateTime>("LastRedeemDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("OTP");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNo");

                    b.Property<int?>("PostalCode");

                    b.Property<int?>("RemainingPoints");

                    b.Property<int?>("StoreId");

                    b.Property<int?>("TotalPoints");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StoreId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Contact");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Name");

                    b.Property<bool>("iscurrentaddress");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddress");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CustomerOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CustomerId");

                    b.Property<int>("OfferId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OfferId");

                    b.ToTable("CustomerOffers");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeliveryBoyId");

                    b.Property<string>("Location");

                    b.Property<int>("OrderId");

                    b.Property<int>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryBoyId");

                    b.HasIndex("OrderId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("SuperMarketApi.Models.DiningArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StoreId");

                    b.ToTable("DiningAreas");
                });

            modelBuilder.Entity("SuperMarketApi.Models.DiningTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Description");

                    b.Property<int>("DiningAreaId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("StoreId");

                    b.Property<int>("TableStatusId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DiningAreaId");

                    b.HasIndex("StoreId");

                    b.ToTable("DiningTables");
                });

            modelBuilder.Entity("SuperMarketApi.Models.DiscountRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("CouponCode");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DiscountType");

                    b.Property<double>("DiscountValue");

                    b.Property<DateTime?>("EndDate");

                    b.Property<double>("MaxDiscountAmount");

                    b.Property<double>("MiniOrderValue");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<DateTime?>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("DiscountRules");
                });

            modelBuilder.Entity("SuperMarketApi.Models.DropDown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DropDownGroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DropDownGroupId");

                    b.ToTable("DropDowns");
                });

            modelBuilder.Entity("SuperMarketApi.Models.DropDownGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("DropDownGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.KOT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Instruction");

                    b.Property<int?>("KOTGroupId");

                    b.Property<string>("KOTNo");

                    b.Property<int>("KOTStatusId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OrderId");

                    b.Property<int?>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("KOTGroupId");

                    b.HasIndex("OrderId");

                    b.HasIndex("StoreId");

                    b.ToTable("KOTs");
                });

            modelBuilder.Entity("SuperMarketApi.Models.KOTGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsEditable");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Printer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("KOTGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.KOTGroupPrinter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("KOTGroupId");

                    b.Property<string>("Printer");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("KOTGroupId");

                    b.HasIndex("StoreId");

                    b.ToTable("KOTGroupPrinters");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("UpdateDateTime");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OfferRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("OfferId");

                    b.Property<int>("RuleId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferRules");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OfferType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("OfferTypes");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("OperType");

                    b.HasKey("Id");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double>("DeliveryPrice");

                    b.Property<string>("Description");

                    b.Property<bool>("IsSynced");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<int>("OptionGroupId");

                    b.Property<double>("Price");

                    b.Property<int>("SortOrder");

                    b.Property<double>("TakeawayPrice");

                    b.Property<double>("UPPrice");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OptionGroupId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OptionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsSynced");

                    b.Property<int>("MaximumSelectable");

                    b.Property<int>("MinimumSelectable");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<int>("OptionGroupType");

                    b.Property<int>("SortOrder");

                    b.Property<bool>("isactive");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("OptionGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrdItemAddon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddonId");

                    b.Property<int>("OrderItemId");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<int?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("AddonId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("StatusId");

                    b.ToTable("OrdItemAddons");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrdItemOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OptionId");

                    b.Property<int>("OrderItemId");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrdItemOptions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrdItemVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderItemId");

                    b.Property<double>("Price");

                    b.Property<int>("VariantId");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("VariantId");

                    b.ToTable("OrdItemVariants");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregatorOrderId");

                    b.Property<double?>("AllItemDisc");

                    b.Property<double?>("AllItemTaxDisc");

                    b.Property<double?>("AllItemTotalDisc");

                    b.Property<double>("BillAmount");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("BillDateTime");

                    b.Property<int>("BillStatusId");

                    b.Property<string>("ChargeJson");

                    b.Property<double?>("Charges");

                    b.Property<bool>("Closed");

                    b.Property<int>("CompanyId");

                    b.Property<int?>("CustomerAddressId");

                    b.Property<string>("CustomerData");

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime?>("DeliveryDateTime");

                    b.Property<int?>("DiningTableId");

                    b.Property<double>("DiscAmount");

                    b.Property<double>("DiscPercent");

                    b.Property<bool>("FoodReady");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsAdvanceOrder");

                    b.Property<string>("ItemJson");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Note");

                    b.Property<double?>("OrderDiscount");

                    b.Property<string>("OrderJson");

                    b.Property<int>("OrderNo");

                    b.Property<string>("OrderStatusDetails");

                    b.Property<int>("OrderStatusId");

                    b.Property<double?>("OrderTaxDisc");

                    b.Property<double?>("OrderTotDisc");

                    b.Property<int>("OrderTypeId");

                    b.Property<DateTime>("OrderedDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("OrderedDateTime");

                    b.Property<double>("PaidAmount");

                    b.Property<int?>("PreviousStatusId");

                    b.Property<double>("RefundAmount");

                    b.Property<string>("RiderStatusDetails");

                    b.Property<string>("Source");

                    b.Property<int?>("SourceId");

                    b.Property<int?>("SplitTableId");

                    b.Property<int?>("StoreId");

                    b.Property<double>("Tax1");

                    b.Property<double>("Tax2");

                    b.Property<double>("Tax3");

                    b.Property<string>("UPOrderId");

                    b.Property<int?>("UserId");

                    b.Property<int?>("WaiterId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerAddressId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DiningTableId");

                    b.HasIndex("OrderTypeId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrderCharges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdditionalChargeId");

                    b.Property<double>("ChargeAmount");

                    b.Property<double>("ChargePercentage");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OrderId");

                    b.Property<int?>("StoreId");

                    b.Property<double>("Tax1");

                    b.Property<double>("Tax2");

                    b.Property<double>("Tax3");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalChargeId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrderId");

                    b.HasIndex("StoreId");

                    b.ToTable("OrderCharges");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<float?>("ComplementryQty");

                    b.Property<double>("DiscAmount");

                    b.Property<double>("DiscPercent");

                    b.Property<double?>("Extra");

                    b.Property<double?>("ItemDiscount");

                    b.Property<int?>("KOTId");

                    b.Property<int?>("KitchenUserId");

                    b.Property<string>("Message");

                    b.Property<string>("Note");

                    b.Property<string>("OptionJson");

                    b.Property<double?>("OrderDiscount");

                    b.Property<int>("OrderId");

                    b.Property<float>("Price");

                    b.Property<int>("ProductId");

                    b.Property<float>("Quantity");

                    b.Property<int>("StatusId");

                    b.Property<double>("Tax1");

                    b.Property<double>("Tax2");

                    b.Property<double>("Tax3");

                    b.Property<double?>("TaxItemDiscount");

                    b.Property<double?>("TaxOrderDiscount");

                    b.Property<double?>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("KOTId");

                    b.HasIndex("KitchenUserId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Error");

                    b.Property<DateTime>("LoggedDateTime");

                    b.Property<string>("Payload");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StoreId");

                    b.ToTable("OrderLogs");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("OrderTypes");
                });

            modelBuilder.Entity("SuperMarketApi.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Preference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdminOnlyCancel");

                    b.Property<bool>("AdvanceOrder");

                    b.Property<int>("CompanyId");

                    b.Property<bool>("Delivery");

                    b.Property<bool>("DineIn");

                    b.Property<bool>("EnforceCustomerNo");

                    b.Property<bool>("FreeQuantity");

                    b.Property<bool>("KOTGenerate");

                    b.Property<bool>("OnlineOrder");

                    b.Property<bool>("QuickOrder");

                    b.Property<bool>("ShowTaxonBill");

                    b.Property<bool>("ShowUpcategory");

                    b.Property<bool>("TakeAway");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Printer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<int>("NoOfCharacters");

                    b.Property<int>("PortNumber");

                    b.Property<string>("Size");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Printers");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode");

                    b.Property<int>("CategoryId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double>("DeliveryPrice");

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImgUrl");

                    b.Property<int?>("KOTGroupId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode");

                    b.Property<int>("ProductTypeId");

                    b.Property<bool>("Recomended");

                    b.Property<int?>("SortOrder");

                    b.Property<double>("TakeawayPrice");

                    b.Property<int>("TaxGroupId");

                    b.Property<double>("UPPrice");

                    b.Property<int>("UnitId");

                    b.Property<bool>("isactive");

                    b.Property<int?>("minblock");

                    b.Property<int?>("minquantity");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("KOTGroupId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("TaxGroupId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductAddOn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddOnId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Price");

                    b.Property<int>("ProductId");

                    b.Property<double>("TakeawayPrice");

                    b.HasKey("Id");

                    b.HasIndex("AddOnId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAddOns");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductAddonGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddonGroupId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("AddonGroupId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAddonGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OptionId");

                    b.Property<double>("Price");

                    b.Property<int>("ProductId");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<double?>("UPPrice");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OptionId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOptions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductOptionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OptionGroupId");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OptionGroupId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOptionGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Price");

                    b.Property<int>("ProductId");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<int>("VariantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VariantId");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductVariantGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("ProductId");

                    b.Property<int>("VariantGroupId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VariantGroupId");

                    b.ToTable("ProductVariantGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword");

                    b.Property<string>("EmailId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNo");

                    b.Property<string>("Provider");

                    b.Property<string>("RestaurentName");

                    b.HasKey("Id");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("OfferTypeId");

                    b.Property<int>("OperatorId");

                    b.Property<int>("OperatorValue");

                    b.Property<int>("VariableTypeId");

                    b.Property<double>("value");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OfferTypeId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("VariableTypeId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ScreenRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("RoleId");

                    b.Property<string>("Rules");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ScreenRules");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ShiftSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ClosingBalance");

                    b.Property<int>("CompanyId");

                    b.Property<double>("OpeningBalance");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("ShiftEndTime");

                    b.Property<DateTime>("ShiftStartTime");

                    b.Property<int>("StoreId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("ShiftSummaries");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("AutoAcceptTime");

                    b.Property<string>("City");

                    b.Property<TimeSpan>("ClosingTime");

                    b.Property<int>("CompanyId");

                    b.Property<string>("ContactNo");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<int>("FoodPrepTime");

                    b.Property<string>("GSTno");

                    b.Property<bool>("IsSalesStore");

                    b.Property<string>("Name");

                    b.Property<TimeSpan>("OpeningTime");

                    b.Property<int?>("ParentStoreId");

                    b.Property<string>("PostalCode");

                    b.Property<bool>("isactive");

                    b.Property<string>("kotprinter");

                    b.Property<string>("receiptprinter");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ParentStoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OptionId");

                    b.Property<double?>("Price");

                    b.Property<int>("StoreId");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<double?>("UPPrice");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OptionId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreOptions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.StorePreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdminOnlyCancel");

                    b.Property<bool>("AdvanceOrder");

                    b.Property<int>("CompanyId");

                    b.Property<bool>("Delivery");

                    b.Property<bool>("DineIn");

                    b.Property<bool>("EnforceCustomerNo");

                    b.Property<bool>("FreeQuantity");

                    b.Property<bool>("KOTGenerate");

                    b.Property<bool>("OnlineOrder");

                    b.Property<bool>("QuickOrder");

                    b.Property<bool>("ShowTaxonBill");

                    b.Property<bool>("ShowUpcategory");

                    b.Property<int>("StoreId");

                    b.Property<bool>("TakeAway");

                    b.Property<bool>("customeraddressinbill");

                    b.Property<bool>("showchildcategory");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StoreId");

                    b.ToTable("StorePreferences");
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double>("DeliveryPrice");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeliveryService");

                    b.Property<bool>("IsDineInService");

                    b.Property<bool>("IsSynced");

                    b.Property<bool>("IsTakeAwayService");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Price");

                    b.Property<int>("ProductId");

                    b.Property<bool>("Recommended");

                    b.Property<int?>("SortOrder");

                    b.Property<int>("StoreId");

                    b.Property<DateTime>("SyncedAt");

                    b.Property<double>("TakeawayPrice");

                    b.Property<int>("UPAction");

                    b.Property<double>("UPPrice");

                    b.Property<bool>("UPenabled");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreProducts");
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProductAddon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddOnId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double>("DeliveryPrice");

                    b.Property<bool>("IsAvailable");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Price");

                    b.Property<int>("ProductAddonId");

                    b.Property<int>("ProductId");

                    b.Property<int>("StoreId");

                    b.Property<double>("TakeawayPrice");

                    b.HasKey("Id");

                    b.HasIndex("AddOnId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreProductAddons");
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProductOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<int?>("MappedProductId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OptionId");

                    b.Property<double?>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int>("ProductOptionId");

                    b.Property<int>("StoreId");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<double?>("UPPrice");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MappedProductId");

                    b.HasIndex("OptionId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductOptionId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreProductOptions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double?>("DeliveryPrice");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double?>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int>("ProductVariantId");

                    b.Property<int>("StoreId");

                    b.Property<double?>("TakeawayPrice");

                    b.Property<int>("VariantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.HasIndex("VariantId");

                    b.ToTable("StoreProductVariants");
                });

            modelBuilder.Entity("SuperMarketApi.Models.TaxGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Description");

                    b.Property<bool>("IsInclusive");

                    b.Property<double>("Tax1");

                    b.Property<double>("Tax2");

                    b.Property<double>("Tax3");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("TaxGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.TransType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("TransTypes");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("CompanyId");

                    b.Property<int?>("CustomerId");

                    b.Property<string>("Notes");

                    b.Property<int?>("OrderId");

                    b.Property<int?>("PaymentStatusId");

                    b.Property<int>("PaymentTypeId");

                    b.Property<int?>("StoreId");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("TransDateTime");

                    b.Property<int>("TranstypeId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UPLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<int?>("BrandId");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Json");

                    b.Property<DateTime>("LogDateTime");

                    b.Property<string>("ReferenceId");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StoreId");

                    b.ToTable("UPLogs");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UPOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("available");

                    b.Property<string>("description");

                    b.Property<int>("food_type");

                    b.Property<double>("price");

                    b.Property<string>("ref_id");

                    b.Property<bool>("sold_at_store");

                    b.Property<string>("title");

                    b.HasKey("Id");

                    b.ToTable("UPOptions");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UPOptionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active");

                    b.Property<int>("max_selectable");

                    b.Property<int>("min_selectable");

                    b.Property<string>("ref_id");

                    b.Property<string>("title");

                    b.HasKey("Id");

                    b.ToTable("UPOptionGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UPProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available");

                    b.Property<int?>("BrandId");

                    b.Property<int>("CompanyId");

                    b.Property<bool>("IsEnabled");

                    b.Property<double>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("UPProducts");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UrbanPiperKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("ApiKey");

                    b.Property<int>("CompanyId");

                    b.Property<bool>("FoodPanda");

                    b.Property<bool>("Swiggy");

                    b.Property<bool>("UberEats");

                    b.Property<bool>("UrbanPiper");

                    b.Property<string>("UserName");

                    b.Property<bool>("Zomato");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CompanyId");

                    b.ToTable("UrbanPiperKeys");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UrbanPiperStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Amazon");

                    b.Property<int?>("BrandId");

                    b.Property<int>("CompanyId");

                    b.Property<bool>("Dunzo");

                    b.Property<bool>("FoodPanda");

                    b.Property<TimeSpan>("FoodPrepTime");

                    b.Property<bool>("IsAmazon");

                    b.Property<bool>("IsDunzo");

                    b.Property<bool>("IsSwiggy");

                    b.Property<bool>("IsUrbanPiper");

                    b.Property<bool>("IsZomato");

                    b.Property<string>("LocationName");

                    b.Property<int>("StoreId");

                    b.Property<bool>("Swiggy");

                    b.Property<string>("UPId");

                    b.Property<bool>("UberEats");

                    b.Property<bool>("UrbanPiper");

                    b.Property<bool>("Zomato");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StoreId");

                    b.ToTable("UrbanPiperStores");
                });

            modelBuilder.Entity("SuperMarketApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Name");

                    b.Property<int>("Pin");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("Isdefault");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UserStores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StoreId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("UserStores");
                });

            modelBuilder.Entity("SuperMarketApi.Models.VariableType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("VariableTypes");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("VariantGroupId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VariantGroupId");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("SuperMarketApi.Models.VariantGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("VariantGroups");
                });

            modelBuilder.Entity("SuperMarketApi.Models.WebhookResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefId");

                    b.Property<int>("StatusCode");

                    b.Property<string>("message");

                    b.HasKey("Id");

                    b.ToTable("WebhookResponses");
                });

            modelBuilder.Entity("SuperMarketApi.Models.Accounts", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.AdditionalCharges", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.TaxGroup", "TaxGroup")
                        .WithMany()
                        .HasForeignKey("TaxGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Addon", b =>
                {
                    b.HasOne("SuperMarketApi.Models.AddonGroup", "AddonGroup")
                        .WithMany()
                        .HasForeignKey("AddonGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.AddonGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Barcode", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.BarcodeVariant", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Barcode", "Barcode")
                        .WithMany()
                        .HasForeignKey("BarcodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Brand", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Category", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryAddon", b =>
                {
                    b.HasOne("SuperMarketApi.Models.AddonGroup", "AddonGroup")
                        .WithMany()
                        .HasForeignKey("AddonGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Addon", "Addon")
                        .WithMany()
                        .HasForeignKey("AddonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryOption", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.OptionGroup", "OptionGroup")
                        .WithMany()
                        .HasForeignKey("OptionGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Variant", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryOptionGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.OptionGroup", "OptionGroup")
                        .WithMany()
                        .HasForeignKey("OptionGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryVariant", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.VariantGroup", "VariantGroup")
                        .WithMany()
                        .HasForeignKey("VariantGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.CategoryVariantGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.VariantGroup", "VariantGroup")
                        .WithMany()
                        .HasForeignKey("VariantGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Cndition", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Operator", "JoinOperator")
                        .WithMany()
                        .HasForeignKey("JoinOperatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Cndition", "ParentCndition")
                        .WithMany()
                        .HasForeignKey("ParentCnditionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.VariableType", "VariableType")
                        .WithMany()
                        .HasForeignKey("VariableTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Customer", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.CustomerAddress", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.CustomerOffer", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Delivery", b =>
                {
                    b.HasOne("SuperMarketApi.Models.User", "DeliveryBoy")
                        .WithMany()
                        .HasForeignKey("DeliveryBoyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.DiningArea", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.DiningTable", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.DiningArea", "DiningArea")
                        .WithMany()
                        .HasForeignKey("DiningAreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.DiscountRule", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.DropDown", b =>
                {
                    b.HasOne("SuperMarketApi.Models.DropDownGroup", "DropDownGroup")
                        .WithMany()
                        .HasForeignKey("DropDownGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.KOT", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.KOTGroup", "KOTGroup")
                        .WithMany()
                        .HasForeignKey("KOTGroupId");

                    b.HasOne("SuperMarketApi.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.KOTGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.KOTGroupPrinter", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.KOTGroup", "KOTGroup")
                        .WithMany()
                        .HasForeignKey("KOTGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Offer", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.OfferRule", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Option", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.OptionGroup", "OptionGroup")
                        .WithMany()
                        .HasForeignKey("OptionGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.OptionGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrdItemAddon", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Addon", "Addon")
                        .WithMany()
                        .HasForeignKey("AddonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.DropDown", "DropDown")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrdItemOptions", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrdItemVariant", b =>
                {
                    b.HasOne("SuperMarketApi.Models.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Order", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.CustomerAddress", "CustomerAddress")
                        .WithMany()
                        .HasForeignKey("CustomerAddressId");

                    b.HasOne("SuperMarketApi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("SuperMarketApi.Models.DiningTable", "DiningTable")
                        .WithMany()
                        .HasForeignKey("DiningTableId");

                    b.HasOne("SuperMarketApi.Models.OrderType", "OrderType")
                        .WithMany()
                        .HasForeignKey("OrderTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("SuperMarketApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("SuperMarketApi.Models.User", "POSUser")
                        .WithMany()
                        .HasForeignKey("WaiterId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrderCharges", b =>
                {
                    b.HasOne("SuperMarketApi.Models.AdditionalCharges", "AdditionalCharges")
                        .WithMany()
                        .HasForeignKey("AdditionalChargeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrderItem", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("SuperMarketApi.Models.KOT", "KOT")
                        .WithMany()
                        .HasForeignKey("KOTId");

                    b.HasOne("SuperMarketApi.Models.User", "KitchenUser")
                        .WithMany()
                        .HasForeignKey("KitchenUserId");

                    b.HasOne("SuperMarketApi.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.OrderLog", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Preference", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Product", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.KOTGroup", "KOTGroup")
                        .WithMany()
                        .HasForeignKey("KOTGroupId");

                    b.HasOne("SuperMarketApi.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.TaxGroup", "TaxGroup")
                        .WithMany()
                        .HasForeignKey("TaxGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductAddOn", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Addon", "AddOn")
                        .WithMany()
                        .HasForeignKey("AddOnId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductAddonGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.AddonGroup", "AddonGroup")
                        .WithMany()
                        .HasForeignKey("AddonGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductOption", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductOptionGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.OptionGroup", "OptionGroup")
                        .WithMany()
                        .HasForeignKey("OptionGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductVariant", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.ProductVariantGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.VariantGroup", "VariantGroup")
                        .WithMany()
                        .HasForeignKey("VariantGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Result", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.OfferType", "OfferType")
                        .WithMany()
                        .HasForeignKey("OfferTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.VariableType", "VariableType")
                        .WithMany()
                        .HasForeignKey("VariableTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.ScreenRule", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("SuperMarketApi.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("SuperMarketApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.ShiftSummary", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Store", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "ParentStore")
                        .WithMany()
                        .HasForeignKey("ParentStoreId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreOption", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.StorePreference", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProduct", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProductAddon", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Addon", "AddOn")
                        .WithMany()
                        .HasForeignKey("AddOnId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProductOption", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "MappedProduct")
                        .WithMany()
                        .HasForeignKey("MappedProductId");

                    b.HasOne("SuperMarketApi.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.ProductOption", "ProductOption")
                        .WithMany()
                        .HasForeignKey("ProductOptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.StoreProductVariant", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.TaxGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Transaction", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("SuperMarketApi.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("SuperMarketApi.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("SuperMarketApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.UPLog", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.UPProduct", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.UrbanPiperKey", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.UrbanPiperStore", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.User", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.UserRole", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.UserStores", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperMarketApi.Models.Variant", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperMarketApi.Models.VariantGroup", "VariantGroup")
                        .WithMany()
                        .HasForeignKey("VariantGroupId");
                });

            modelBuilder.Entity("SuperMarketApi.Models.VariantGroup", b =>
                {
                    b.HasOne("SuperMarketApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
